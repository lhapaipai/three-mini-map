import{p as e,d as t,t as i,W as s,S as n,C as r,L as a,E as o,B as h,a as d,P as c,M as m,A as l,G as u,b as p,D as g,O as w,V as S}from"./vendor.e79e4087.js";class R{constructor(e){this.config=Object.assign({},{apiTexture:"osm",textureZoom:11,apiElevation:"terrarium",tileSegments:128,zScale:.05,distanceFromCenter:5,center:[6.4751,46.1024]},e),this.init()}init(){console.log("hello");let{center:s,distanceFromCenter:n,textureZoom:r}=this.config;const a=class{static bboxFromPointAndRadius(i,s){const n={type:"Feature",properties:{},geometry:{type:"Polygon",coordinates:[[]]}};let r=e(i);const[a,o]=t(r,s,-45).geometry.coordinates,[h,d]=t(r,s,135).geometry.coordinates;return n.geometry.coordinates[0]=[[a,o],[h,o],[h,d],[a,d],[a,o]],{feature:n,northWest:[a,o],southEast:[h,d]}}}.bboxFromPointAndRadius(s,n);console.log(a);const o=i.tiles(a.feature.geometry,{min_zoom:r,max_zoom:r}).map((([e,t,i])=>[i,e,t]));console.log(o)}}new class{constructor(e){w.DefaultUp=new S(0,0,1);let t=document.querySelector(e);this.renderer=new s({canvas:t});const i=Math.min(window.devicePixelRatio,2);this.width=t.clientWidth*i,this.height=t.clientHeight*i,this.scene=new n,this.scene.background=new r("white"),this.renderRequested=!1,this.initCamera(),this.initLights(),this.initListeners(),this.initScene(),this.initHelpers(),this.updateSize()}async initScene(){const e=new a(new o(new h(1,1,1)),new d({color:"red"}));this.scene.add(e),new R({apiTexture:"osm",textureZoom:11,apiElevation:"terrarium",tileSegments:128,zScale:.05,distanceFromCenter:2,center:[6.4751,46.1024]}),this.requestRender()}initListeners(){this.updateSize=this.updateSize.bind(this),this.requestRender=this.requestRender.bind(this),this.render=this.render.bind(this),window.addEventListener("resize",this.updateSize),this.mapControls.addEventListener("change",this.requestRender)}initCamera(){let e=this.renderer.domElement,t=e.clientWidth/e.clientHeight;this.camera=new c(75,t,.01,25),this.camera.position.set(0,0,1.5),this.camera.lookAt(0,0,0),this.scene.add(this.camera),this.mapControls=new m(this.camera,this.renderer.domElement),this.mapControls.enableDamping=!0}initHelpers(){this.scene.add(new l(1)),this.gui=new u,this.stats=new p,document.body.appendChild(this.stats.dom)}initLights(){const e=new g(16777215,1);e.position.set(-1,2,4),this.scene.add(e)}updateSize(){let e=this.renderer.domElement;const t=Math.min(window.devicePixelRatio,2);this.width=e.clientWidth*t,this.height=e.clientHeight*t,e.width===this.width&&e.height===this.height||(this.renderer.setSize(this.width,this.height,!1),this.camera.aspect=this.width/this.height,this.camera.updateProjectionMatrix()),this.render()}render(){console.log("render"),this.renderRequested=!1,this.mapControls.update(),this.stats.update(),this.renderer.render(this.scene,this.camera)}requestRender(){this.renderRequested||(this.renderRequested=!0,requestAnimationFrame(this.render))}}("#app");
